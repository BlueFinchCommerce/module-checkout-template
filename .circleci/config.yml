version: 2.1
jobs:
  build:
    docker:
      - image: cimg/php:8.2.15-browsers
      - image: cimg/mariadb:10.4
        environment:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: m2build
      - image: docker.elastic.co/elasticsearch/elasticsearch:7.12.0
        environment:
          transport.host: 127.0.0.1
          network.host: 127.0.0.1
          http.port: 9200
          cluster.name: es-cluster
          discovery.type: single-node
          xpack.security.enabled: "false"
          ES_JAVA_OPTS: "-Xms256m -Xmx256m"
    working_directory: ~/magento2
    steps:
      - run:
          name: Waiting for MySQL startup
          command: |
            for i in `seq 1 20`;
            do
              nc -z 127.0.0.1 3306 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo MySQL failed to start && exit 1
      - run:
          name: Wait for ES startup
          command: dockerize -wait tcp://localhost:9200 -timeout 30s
      - run:
          name: Install System Packages
          command: |
            sudo apt-get update -y && sudo apt-get install -y \
            cron \
            git \
            gzip \
            libbz2-dev \
            libfreetype6-dev \
            libicu-dev \
            libjpeg-dev \
            libmcrypt-dev \
            libonig-dev \
            libpng-dev \
            libsodium-dev \
            libssh2-1-dev \
            libxslt1-dev \
            libzip-dev \
            lsof \
            default-mysql-client \
            vim \
            zip \
            zlib1g-dev \
            sendmail \
            procps \
            nginx
      - run:
          name: Install PHP Packages
          command: |
            sudo docker-php-ext-install \
            sysvshm \
            xsl
            sudo composer self-update
      - run:
          name: Composer Configure
          command: |
            composer config -g http-basic.repo.magento.com $MAGENTO_REPO_KEY $MAGENTO_REPO_SECRET
            composer config -g http-basic.repo.packagist.com "token" $GENE_PACKAGIST_TOKEN
            composer config -g allow-plugins true
      - run:
          name: Composer Create Project
          command: php -d memory_limit=-1 /usr/local/bin/composer create-project --no-interaction --repository-url=https://repo.magento.com/ magento/project-community-edition=2.4.6 .
      - run:
          name: Install Module @ CI Build Branch/Commit
          command: |
            composer config repositories.gene-packages '{"type": "composer", "url": "https://repo.packagist.com/gene/", "canonical": false}'
            composer config minimum-stability dev
            composer config prefer-stable true
            composer require gene/module-better-checkout-new-module:dev-${CIRCLE_BRANCH}#${CIRCLE_SHA1} --no-interaction
      - run:
          name: Install Magento
          command: |
            php -d memory_limit=-1 bin/magento setup:install \
            --base-url=http://m2build.test/ \
            --db-host=127.0.0.1 \
            --db-name=m2build \
            --db-user=root \
            --db-password=root \
            --admin-firstname=Admin \
            --admin-lastname=User \
            --admin-email=admin@gene.co.uk \
            --admin-user=admin \
            --admin-password=password1 \
            --language=en_GB \
            --currency=GBP \
            --timezone=Europe/London \
            --cleanup-database \
            --sales-order-increment-prefix="ORD$" \
            --session-save=db \
            --use-rewrites=1 \
            --search-engine=elasticsearch7 \
            --elasticsearch-host=127.0.0.1 \
            --elasticsearch-port=9200 \
            --elasticsearch-enable-auth=0 \
            --elasticsearch-index-prefix="local" \
            --elasticsearch-timeout=15
      - run:
          name: DI Compile
          command: php -d memory_limit=-1 bin/magento setup:di:compile
      - run:
          name: Install composer modules within Better Checkout
          command: |
            composer install --working-dir=vendor/gene/module-better-checkout-new-module  --dev
      - run:
          name: PHPCS
          command: |
            ./vendor/bin/phpcs vendor/gene/module-better-checkout-new-module --standard=Magento2 --ignore=vendor,*.css,Test --extensions=php --colors -s -p -v --runtime-set installed_paths vendor/magento/magento-coding-standard,vendor/magento/php-compatibility-fork
      - run:
          name: PHPStan
          working_directory: ./vendor/gene/module-better-checkout-new-module
          command: ./vendor/bin/phpstan analyse . --configuration=./phpstan.neon
      - run:
          name: Configure PHPunit
          working_directory: ./vendor/gene/module-better-checkout-new-module
          command: |
            mkdir -p ~/phpunit
      - run:
          name: PHPUnit
          working_directory: ./vendor/gene/module-better-checkout-new-module
          command: ./vendor/bin/phpunit -c phpunit.xml
      - store_test_results:
          path: ~/phpunit
      - store_artifacts:
          path: ~/phpunit
      - run:
          name: NPM install to root module
          command: npm --prefix vendor/gene/module-better-checkout-new-module i
      - run:
          name: NPM install to checkout app
          command: npm --prefix vendor/gene/module-better-checkout-new-module/view/frontend/web/js/checkout i
      - run:
          name: ESLint run against root module
          command: npm --prefix vendor/gene/module-better-checkout-new-module run lint
      - run:
          name: ESLint run against checkout app
          command: npm --prefix vendor/gene/module-better-checkout-new-module/view/frontend/web/js/checkout run lint

workflows:
  build-test:
    jobs:
      - build:
          context: magento2 module
